{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodoItem","todo","handleClick","isSelected","className","classNames","id","completed","title","type","onClick","far","TodoList","todos","selectedTodo","map","TodoFilter","query","setQuery","status","setStatus","value","onChange","event","target","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","setSelectedTodo","userId","useState","user","setUser","loading","setLoading","useEffect","getUser","finally","href","email","name","App","todosFromServer","setTodosFromServer","isLoaderShown","setIsLoaderShown","filteredTodos","useMemo","lowerQuery","toLowerCase","filter","includes","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cdb0d42f.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  query: string,\n  setQuery: (query: string) => void,\n  status: string,\n  setStatus: (status: string) => void,\n}\n\nenum Status {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  status,\n  setStatus,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={(event) => setStatus(event.target.value)}\n          >\n            <option value={Status.ALL}>\n              All\n            </option>\n            <option value={Status.ACTIVE}>\n              Active\n            </option>\n            <option value={Status.COMPLETED}>\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            setQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo;\n  handleClick: (todo: Todo) => void;\n  isSelected: boolean;\n}\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  handleClick,\n  isSelected,\n}) => {\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={classNames({ 'has-background-info-light': isSelected })}\n      key={todo.id}\n    >\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={\n          classNames({\n            'has-text-danger': !todo.completed,\n            'has-text-success': todo.completed,\n          })\n        }\n        >\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => handleClick(todo)}\n        >\n          <span className=\"icon\">\n            <i className={classNames({\n              far: true,\n              'fa-eye': !isSelected,\n              'fa-eye-slash': isSelected,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  handleClick: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  handleClick,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const isSelected = selectedTodo?.id === todo.id;\n\n          return (\n            <TodoItem\n              todo={todo}\n              isSelected={isSelected}\n              handleClick={handleClick}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\n\nimport { getUser } from '../../api';\n\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ninterface Props {\n  selectedTodo: Todo,\n  setSelectedTodo: (todo: Todo | null) => void,\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const {\n    id,\n    userId,\n    title,\n    completed,\n  } = selectedTodo;\n\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    if (selectedTodo) {\n      getUser(userId)\n        .then(setUser)\n        .finally(() => setLoading(false));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {\n                completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>\n              }\n\n              {' by '}\n\n              <a href={user?.email}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\n// import { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n\n  const [isLoaderShown, setIsLoaderShown] = useState(false);\n\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState('');\n\n  useEffect(() => {\n    setIsLoaderShown(true);\n\n    getTodos()\n      .then((todos) => {\n        setTodosFromServer(todos);\n      })\n      .finally(() => {\n        setIsLoaderShown(false);\n      });\n  }, []);\n\n  const handleClick = (item: Todo) => {\n    setSelectedTodo(item);\n  };\n\n  const filteredTodos = useMemo(() => {\n    const lowerQuery = query.toLowerCase();\n\n    return todosFromServer\n      .filter(todo => {\n        switch (status) {\n          case 'active':\n            return !todo.completed;\n          case 'completed':\n            return todo.completed;\n          default:\n            return true;\n        }\n      })\n      .filter(todo => todo.title.toLowerCase().includes(lowerQuery));\n  }, [todosFromServer, query, status]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                status={status}\n                setStatus={setStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoaderShown\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    selectedTodo={selectedTodo}\n                    handleClick={handleClick}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo\n      && (<TodoModal selectedTodo={selectedTodo} setSelectedTodo={setSelectedTodo} />)}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}